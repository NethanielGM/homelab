services:
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    cpus: 0.5
    mem_limit: 512m
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_DIR}/sonarr:/config
      - ${SHOWS_DIR}:/shows
      - ${DOWNLOADS_DIR}:/downloads
    ports:
      - "8989:8989"
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    cpus: 0.5
    mem_limit: 512m
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_DIR}/radarr:/config
      - ${MOVIES_DIR}:/movies
      - ${DOWNLOADS_DIR}:/downloads
    ports:
      - "7878:7878"
    restart: unless-stopped

  lidarr:
    image: linuxserver/lidarr
    container_name: lidarr
    cpus: 0.5
    mem_limit: 512m
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_DIR}/lidarr:/config
      - ${MUSIC_DIR}:/music
      - ${DOWNLOADS_DIR}:/downloads
    ports:
      - "8686:8686"
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr
    container_name: prowlarr
    cpus: 0.5
    mem_limit: 512m
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_DIR}/prowlarr:/config
    ports:
      - "9696:9696"
    restart: unless-stopped

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    cpus: 0.5
    mem_limit: 512m
    environment:
      - LOG_LEVEL=info
      - TZ=${TZ}
    volumes:
      - ${CONFIG_DIR}/jellyseerr:/app/config
    ports:
      - "5055:5055"
    restart: unless-stopped

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    cpus: 0.5
    mem_limit: 512m
    environment:
      - LOG_LEVEL=info
      - TZ=${TZ}
    ports:
      - "8191:8191"
    restart: unless-stopped

  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cpus: 0.5
    mem_limit: 1g
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    environment:
      - VPN_SERVICE_PROVIDER=nordvpn
      - OPENVPN_USER=${NORD_USER}
      - OPENVPN_PASSWORD=${NORD_PASS}
      - SERVER_CATEGORIES=p2p
      - SERVER_COUNTRIES=${VPN_COUNTRY}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_DIR}/gluetun:/gluetun
    ports:
      - "8880:8880"
      - "6881:6881/tcp"
      - "6881:6881/udp"
    restart: unless-stopped

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent
    container_name: qbittorrent
    cpus: 1
    mem_limit: 1g
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8880
    volumes:
      - ${CONFIG_DIR}/qbittorrent:/config
      - ${DOWNLOADS_DIR}:/downloads
    restart: unless-stopped

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    cpus: 0.25
    mem_limit: 256m
    depends_on:
      - emby
      - sonarr
      - radarr
      - lidarr
      - prowlarr
      - jellyseerr
      - qbittorrent
    volumes:
      - ${CONFIG_DIR}/cloudflared:/etc/cloudflared:ro
    command: tunnel run
    networks:
      - default
      - seafile
    restart: unless-stopped

  emby:
    image: emby/embyserver:latest
    container_name: emby
    cpus: 2
    mem_limit: 4g
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_DIR}/emby/config:/config
      - ${CONFIG_DIR}/emby/logs:/logs
      - ${SHOWS_DIR}:/media/shows
      - ${MOVIES_DIR}:/media/movies
      - ${MUSIC_DIR}:/media/music
      - ${UPLOAD_LOCATION}/upload:/media/immich
    ports:
      - "8096:8096"
      - "8920:8920"
    restart: unless-stopped

  mariadb:
    image: mariadb:10.11
    container_name: mariadb
    cpus: 1
    mem_limit: 1g
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - mariadb-data:/var/lib/mysql
    networks:
      - seafile
    restart: unless-stopped

  memcached:
    image: memcached:1.6-alpine
    container_name: seafile-memcached
    cpus: 0.25
    mem_limit: 256m
    entrypoint: memcached -m 256
    networks:
      - seafile
    restart: unless-stopped

  seafile:
    image: seafileltd/seafile-mc:11.0-latest
    container_name: seafile
    cpus: 1
    mem_limit: 1g
    expose:
      - "80"
    environment:
      - DB_HOST=mariadb
      - DB_ROOT_PASSWD=${MYSQL_ROOT_PASSWORD}
      - TIME_ZONE=${TZ}
      - SEAFILE_ADMIN_EMAIL=${SEAFILE_ADMIN_EMAIL}
      - SEAFILE_ADMIN_PASSWORD=${SEAFILE_ADMIN_PASSWORD}
      - SEAFILE_SERVER_LETSENCRYPT=${SEAFILE_SERVER_LETSENCRYPT}
      - SEAFILE_SERVER_HOSTNAME=seafile.${SERVER_HOSTNAME}
      - SERVICE_URL=https://seafile.${SERVER_HOSTNAME}
    volumes:
      - seafile-data:/shared
    tmpfs:
      - /opt/seafile/pids
    depends_on:
      - mariadb
      - memcached
    networks:
      - seafile
    restart: unless-stopped

  postgres:
    container_name: immich_postgres
    cpus: 1
    mem_limit: 1g    
    image: ghcr.io/immich-app/postgres:14-vectorchord0.3.0-pgvectors0.2.0@sha256:fa4f6e0971f454cd95fec5a9aaed2ed93d8f46725cc6bc61e0698e97dba96da1
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_DB=${DB_DATABASE_NAME}
      - POSTGRES_INITDB_ARGS=--data-checksums
      - DB_STORAGE_TYPE=HDD
    volumes:
      - immich-postgres-data:/var/lib/postgresql/data
    restart: always
    networks:
      default:
        aliases:
          - database

  redis:
    container_name: immich_redis
    cpus: 0.25
    mem_limit: 256m    
    image: docker.io/valkey/valkey:8-bookworm@sha256:ff21bc0f8194dc9c105b769aeabf9585fea6a8ed649c0781caeac5cb3c247884
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  immich-machine-learning:
    container_name: immich_machine_learning
    # For hardware acceleration, add one of -[armnn, cuda, rocm, openvino, rknn] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, rocm, openvino, openvino-wsl, rknn] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
      - immich-redis-data:/cache
    env_file:
      - .env
    restart: always
    healthcheck:
      disable: false

  immich-server:
    container_name: immich_server
    cpus: 2
    mem_limit: 4g  
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    volumes:
      # Do not edit the next line. If you want to change the media storage location on your system, edit the value of UPLOAD_LOCATION in the .env file
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    ports:
      - '2283:2283'
    depends_on:
      - redis
      - postgres
    restart: always
    healthcheck:
      disable: false

networks:
  default:
    driver: bridge
  seafile:
    driver: bridge

volumes:
  seafile-data:
  mariadb-data:
  immich-redis-data:
  immich-postgres-data: