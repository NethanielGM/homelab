services:
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    cpus: 0.1
    mem_limit: 512m
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
    volumes:
      - "${CONFIG_DIR}/sonarr:/config"
      - "${SHOWS_DIR}:/shows"
      - "${DOWNLOADS_DIR}:/downloads"
    ports:
      - "8989:8989"
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    cpus: 0.1
    mem_limit: 512m
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
    volumes:
      - "${CONFIG_DIR}/radarr:/config"
      - "${MOVIES_DIR}:/movies"
      - "${DOWNLOADS_DIR}:/downloads"
    ports:
      - "7878:7878"
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  lidarr:
    image: linuxserver/lidarr
    container_name: lidarr
    cpus: 0.1
    mem_limit: 256m
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
    volumes:
      - "${CONFIG_DIR}/lidarr:/config"
      - "${MUSIC_DIR}:/music"
      - "${DOWNLOADS_DIR}:/downloads"
    ports:
      - "8686:8686"
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  prowlarr:
    image: lscr.io/linuxserver/prowlarr
    container_name: prowlarr
    cpus: 0.1
    mem_limit: 256m
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
    volumes:
      - "${CONFIG_DIR}/prowlarr:/config"
    ports:
      - "9696:9696"
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    cpus: 0.25
    mem_limit: 1g
    environment:
      LOG_LEVEL: "info"
      TZ: "${TZ}"
    volumes:
      - "${CONFIG_DIR}/jellyseerr:/app/config"
    ports:
      - "5055:5055"
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    cpus: 0.1
    mem_limit: 512m
    environment:
      LOG_LEVEL: "info"
      TZ: "${TZ}"
    ports:
      - "8191:8191"
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cpus: 0.1
    mem_limit: 512m
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    environment:
      OPENVPN_USER: "${NORD_USER}"
      OPENVPN_PASSWORD: "${NORD_PASS}"
      SERVER_CATEGORIES: p2p
      SERVER_COUNTRIES: "${VPN_COUNTRY}"
      TZ: "${TZ}"
      VPN_SERVICE_PROVIDER: nordvpn
    volumes:
      - "${CONFIG_DIR}/gluetun:/gluetun"
    ports:
      - "6881:6881/tcp"
      - "6881:6881/udp"
      - "8880:8880"
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent
    container_name: qbittorrent
    cpus: 0.1
    mem_limit: 512m
    depends_on:
      - gluetun
    network_mode: service:gluetun
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
      WEBUI_PORT: 8880
    volumes:
      - "${CONFIG_DIR}/qbittorrent:/config"
      - "${DOWNLOADS_DIR}:/downloads"
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    cpus: 0.1
    mem_limit: 100m
    depends_on:
      - sonarr
      - radarr
      - lidarr
      - prowlarr
      - jellyseerr
      - qbittorrent
      - emby
    volumes:
      - "${CONFIG_DIR}/cloudflared:/etc/cloudflared:ro"
    command: tunnel run
    networks:
      - default
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  emby:
    image: emby/embyserver:latest
    container_name: emby
    cpus: 3
    mem_limit: 2g
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    environment:
      PUID: "${PUID}"
      PGID: "${PGID}"
      TZ: "${TZ}"
    volumes:
      - "${CONFIG_DIR}/emby/config:/config"
      - "${CONFIG_DIR}/emby/logs:/logs"
      - "${SHOWS_DIR}:/media/shows"
      - "${MOVIES_DIR}:/media/movies"
      - "${MUSIC_DIR}:/media/music"
      - "${UPLOAD_LOCATION}/upload:/media/immich"
    ports:
      - "8096:8096"
      - "8920:8920"
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "5"

  postgres:
    image: ghcr.io/immich-app/postgres:14-vectorchord0.3.0-pgvectors0.2.0
    container_name: postgres
    cpus: 0.1
    mem_limit: 256m
    environment:
      DB_STORAGE_TYPE: HDD
      POSTGRES_DB: "${DB_DATABASE_NAME}"
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_INITDB_ARGS: --data-checksums
    volumes:
      - immich-postgres-data:/var/lib/postgresql/data
    networks:
      default:
        aliases:
          - database
    restart: always
    logging:
      driver: json-file
      options:
        max-size: "20m"
        max-file: "3"

  redis:
    image: docker.io/valkey/valkey:8-bookworm
    container_name: redis
    cpus: 0.1
    mem_limit: 50m
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    restart: always
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  immich-machine-learning:
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    container_name: immich_machine_learning
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    cpus: 0.1
    mem_limit: 512m
    env_file:
      - .env
    volumes:
      - immich-redis-data:/cache
    restart: always
    healthcheck:
      disable: false
    logging:
      driver: json-file
      options:
        max-size: "20m"
        max-file: "3"

  immich-server:
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    container_name: immich_server
    runtime: nvidia
    mem_limit: 1g
    env_file:
      - .env
    volumes:
      - "${UPLOAD_LOCATION}:/usr/src/app/upload"
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "2283:2283"
    depends_on:
      - redis
      - postgres
    restart: always
    healthcheck:
      disable: false
    logging:
      driver: json-file
      options:
        max-size: "20m"
        max-file: "3"

  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    cpus: 0.1
    mem_limit: 100m
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "${CONFIG_DIR}/dozzle:/data"
    environment:
      DOZZLE_AUTH_PROVIDER: simple
    expose:
      - "8080"
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

networks:
  default:
    driver: bridge

volumes:
  immich-redis-data:
  immich-postgres-data: